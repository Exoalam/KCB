@page "/Login"
@using KCB.Data
@using System.ComponentModel.DataAnnotations
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@inject ProtectedSessionStorage BrowserStorage
@inject NavigationManager UriHelper
@inject NavigationManager UrlHelper
@inject NavigationManager _navigationManager
@inject DataBase database

<PageTitle>Login</PageTitle>
<div id="login_page_panel">
    <div id="Login_Design" style="height:@hv">
        <br /><h1>@title</h1>
    </div>
    <div id="Authr" style="display:@attrL">
        <input id="Username_in" placeholder="type your email" @bind="email" type="text" /><br />
        <input id="Password_in" placeholder="type your password" @bind="password" type="password" /><br />
        <button id="Login_btn" @onclick="Login_click">Login</button><br />
        <button id="Login_btn" @onclick="Reg_btn">Registration</button><br />
        <p style="color: red">@status</p>
    </div>
    <div id="AuthrR" style="display:@attrR">
        <input id="Username_R" placeholder="type your ID" @bind="Ruser" type="number" /><br />
        <input id="email_R" placeholder="type your email" @bind="Remail" type="text" /><br />
        <input id="Password_R" placeholder="type your password" @bind="Rpassword" type="password" /><br />
        <button id="Login_btn" @onclick="signup_btn">Sign Up</button><br />
        <p style="color: red">@status</p>
    </div>
</div>
@code {
    string email = "";
    string password = "";
    string Ruser = "";
    string Remail = "";
    string Rpassword = "";
    string status = "";
    string attrL = "flex";
    string attrR = "none";
    string title = "Login";
    string hv = "40%";
    public async void Login_click()
    {

        if (Email_Check(email))
        {
            status = "";
            if (password.Length < 8)
            {
                status = "Password must be atleast 8 character";
                password = "";
            }
            else
            {
                status = "";
                string username = database.check_acc(email, password);
                if (username == "W")
                {
                    status = "Email or Password is wrong";
                }
                else
                {
                    await BrowserStorage.SetAsync("name", username);
                    NavMenu.loginrender = true;
                    _navigationManager.NavigateTo("/", true);
                    
                }
            }
        }
        else
        {
            status = "Email not Valid";
            password = "";
        }

    }

    public void Reg_btn()
    {
        attrL = "none";
        attrR = "flex";
        title = "Registration";
        hv = "30%";
    }

    public async void signup_btn()
    {
        if (Email_Check(Remail))
        {
            status = "";
            if (Rpassword.Length < 8)
            {
                status = "Password must be atleast 8 character";
                Rpassword = "";
            }
            else
            {
                status = "";
                database.create_acc(Ruser, Remail, Rpassword);
            }
        }
        else
        {
            status = "Email not Valid";
            Rpassword = "";
        }

    }

    public bool Email_Check(string test)
    {
        if (new EmailAddressAttribute().IsValid(test))
            return true;
        else
        {
            return false;
        }
    }
}